# copy in nvim-config, move to home dir, here for storage purposes
unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-s


set -sg escape-time 0
set -g mouse on

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Unbind default split keys first (good practice)
unbind % # Default vertical split (C-b %)
unbind '"' # Default horizontal split (C-b ")

bind v split-window -h

bind s split-window -v

bind e list-sessions

# only needed in older configs
# set status-utf8 on
# set utf8 on

# colors
set -g default-terminal "${TERM}"

# Custom tmux startup function to go into bashrc
# t() {
#   if tmux has-session -t main 2>/dev/null; then
#     tmux attach-session -t main
#   else
#     # Create the 'main' session and its initial 'nvim' window
#     tmux new-session -d -s main -n nvim
#     tmux send-keys -t main:nvim "cd ~/environment" C-m
#     tmux send-keys -t main:nvim "clear" C-m
#
#     # Create 'docker' window and send 'cd' command to it
#     tmux new-window -t main -n docker
#     tmux send-keys -t main:docker "cd ~/environment/development" C-m
#     tmux send-keys -t main:docker "clear" C-m
#
#     # Create 'bash' window and send 'cd' command to it
#     tmux new-window -t main -n bash
#     tmux send-keys -t main:bash "cd ~/environment" C-m
#     tmux send-keys -t main:bash "clear" C-m
#
#     tmux attach-session -t main:nvim
#   fi
# }
#
# # Alias 'tmux' command to our custom function
# # This makes 'tmux' behave like 't'
# # alias timux='t'
